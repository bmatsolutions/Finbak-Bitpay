@model IEnumerable<DomesticReportModels>
@{
    ViewData["Title"] = "ApprovedPayments";
}

<h3 class="header-title">Approved Payments</h3>

<div class="card-box">
    <p class="text-muted">You can filter the records to view by selecting the below options</p>
    <form method="get">
        <div class="row">
            <div class="col-md-4">
                <div>Date Range:</div>
                <div class="input-group drp">
                    <input name="dateRange" type="text" class="form-control" aria-describedby="drp-icon">
                    <span class="input-group-addon" id="drp-icon"><i class="fa fa-calendar"></i></span>
                </div>
            </div>
            @*<div class="col-md-3">
                    <div>File Status:</div>
                    <select name="fileStatus" class="form-control" asp-items="@fileStatus"></select>
                </div>*@
            <div class="col-md-3">
                <div>Receipt No:</div>
                <input name="assesNo" type="text" class="form-control" />
            </div>
            <div class="col-md-2">
                <div>.</div>
                <button class="btn btn-default"><i class="fa fa-search"></i> Get</button>
            </div>
        </div>
    </form>
    <div class="table-responsive m-t-10">
        @*@(Html.Grid(Model).Build(cols =>
            {
                cols.Add(m => m.CustomerName).Titled("Declarant Name");
                cols.Add(m => m.ReferenceNo).Titled("Declarant No");
                cols.Add(m => m.ReceiptDate).Titled("Receipt No");
                cols.Add(m => m.PaymentMode).Titled("Payment Mode");
                cols.Add(m => m.Amount).Titled("Amount");
                cols.Add(m => m.BranchName).Titled("Branch Name");
               }).Pageable()
                                                                                .Empty("No data to display!")
                                                                                .Css("table-striped table-hover")
        )*@

        <table class="table table-striped table-hover table-bordered table-responsive-md" id="tblData">
            <thead>
                <tr>
                    <td>Declarant Name</td>
                    <td>Declarant No</td>
                    <td>Receipt No</td>
                    <td>Payment Mode</td>
                    <td>Branch Name</td>
                    <td>Amount</td>
                    <td></td>
                </tr>
            </thead>
            <tbody>
                @foreach (var item in Model)
                {
                <tr>
                    <td>@item.CustomerName</td>
                    <td>@item.ReferenceNo</td>
                    <td>@item.ReceiptNo</td>
                    <td>@item.PaymentMode</td>
                    <td>@item.BranchName</td>
                    <td>@item.Amount</td>                    
                </tr>
                }
            </tbody>
        </table>

    </div>
</div>

@section css{
    <link href="~/css/mydatatable.min.css" rel="stylesheet" />
    <link href="~/css/daterangepicker.css" rel="stylesheet" />
}
@section Scripts{
    <script src="~/js/mydatatable.min.js"></script>
    <script src="~/js/daterangepicker.min.js"></script>
    <script>
        $(function () {
            $('#tblData').dataTable();

            var start = moment();
            var end = moment();

            function cb(start, end) {
                $('.drp input').val(start.format('MMMM D, YYYY') + ' - ' + end.format('MMMM D, YYYY'));
            }

            $('.drp').daterangepicker({
                startDate: start,
                endDate: end,
                ranges: {
                    'Today': [moment(), moment()],
                    'Yesterday': [moment().subtract(1, 'days'), moment().subtract(1, 'days')],
                    'Last 7 Days': [moment().subtract(6, 'days'), moment()],
                    'Last 30 Days': [moment().subtract(29, 'days'), moment()],
                    'This Month': [moment().startOf('month'), moment().endOf('month')],
                    'Last Month': [moment().subtract(1, 'month').startOf('month'), moment().subtract(1, 'month').endOf('month')]
                }
            }, cb);

            cb(start, end);

        });
    </script>
}


